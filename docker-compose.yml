name: chatsift-next

services:
  # TODO: Publish own image?
  # TODO: Uncomment once this repo takes over the stack deployment, for now, we're hacking ChatSift/stack to share
  # its caddy instance

  # caddy:
  #   build:
  #     context: ./build/caddy
  #     dockerfile: ./Dockerfile
  #   env_file:
  #     - ./.env.private
  #   ports:
  #     - '80:80'
  #     - '443:443'

  postgres:
    image: postgres:12-alpine
    environment:
      POSTGRES_USER: 'chatsift'
      POSTGRES_PASSWORD: 'admin'
      POSTGRES_DB: 'chatsift'
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    env_file:
      - ./.env.public
      - ./.env.private
    ports:
      - 127.0.0.1:${LOCAL_DATABASE_PORT}:5432
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U chatsift']
      interval: 10s
      timeout: 5s

  dozzle:
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      DOZZLE_ENABLE_ACTIONS: true
    ports:
      - 127.0.0.1:${LOCAL_DOZZLE_PORT}:8080

  redis:
    image: redis:6-alpine
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'redis-cli ping']
      interval: 10s
      timeout: 5s

  api:
    image: chatsift/chatsift-next:api
    build:
      context: ./
      dockerfile: ./Dockerfile
    restart: unless-stopped
    env_file:
      - ./.env.public
      - ./.env.private
    command: ['node', '--enable-source-maps', './services/api/dist/index.js']
    ports:
      - 127.0.0.1:${API_PORT}:${API_PORT}
    volumes:
      - ./logs-archive:/var/chatsift-logs

  automoderator-proxy:
    image: chatsift/chatsift-next:automoderator-discord-proxy
    build:
      context: ./
      dockerfile: ./Dockerfile
    restart: unless-stopped
    env_file:
      - ./.env.public
      - ./.env.private
    environment:
      BOT: automoderator
    command: ['node', '--enable-source-maps', './services/discord-proxy/dist/index.js']
    volumes:
      - ./logs-archive:/var/chatsift-logs

  automoderator-gateway:
    image: chatsift/chatsift-next:automoderator-gateway
    build:
      context: ./
      dockerfile: ./Dockerfile
    restart: unless-stopped
    env_file:
      - ./.env.public
      - ./.env.private
    environment:
      BOT: automoderator
    command: ['node', '--enable-source-maps', './services/gateway/dist/index.js']
    volumes:
      - ./logs-archive:/var/chatsift-logs

  automoderator-interactions:
    image: chatsift/chatsift-next:automoderator-interactions
    build:
      context: ./
      dockerfile: ./Dockerfile
    restart: unless-stopped
    env_file:
      - ./.env.public
      - ./.env.private
    environment:
      BOT: automoderator
    command: ['node', '--enable-source-maps', './services/interactions/dist/index.js']
    volumes:
      - ./logs-archive:/var/chatsift-logs

  automoderator-observer:
    image: chatsift/chatsift-next:automoderator-observer
    build:
      context: ./
      dockerfile: ./Dockerfile
    restart: unless-stopped
    env_file:
      - ./.env.public
      - ./.env.private
    environment:
      BOT: automoderator
    command: ['node', '--enable-source-maps', './services/observer/dist/index.js']
    volumes:
      - ./logs-archive:/var/chatsift-logs

volumes:
  postgres-data:
    name: 'chatsift-next-postgres-data'

# Hack to work with chatsift/stack
networks:
  default:
    name: chatsift
    external: true

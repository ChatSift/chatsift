name: chatsift

services:
  # caddy:
  #   build:
  #     context: ./build/caddy
  #     dockerfile: ./Dockerfile
  #   env_file:
  #     - ./.env.private
  #   ports:
  #     - '80:80'
  #     - '443:443'

  postgres:
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: 'chatsift'
      POSTGRES_PASSWORD: 'admin'
      POSTGRES_DB: 'chatsift'
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    env_file:
      - ./.env.public
      - ./.env.private
    ports:
      - 127.0.0.1:${LOCAL_DATABASE_PORT}:5432
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U chatsift']
      interval: 10s
      timeout: 5s

  dozzle:
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    environment:
      DOZZLE_ENABLE_ACTIONS: true
    ports:
      - 127.0.0.1:${LOCAL_DOZZLE_PORT}:8080

  #   redis:
  #     image: redis:6-alpine
  #     restart: unless-stopped
  #     healthcheck:
  #       test: ['CMD-SHELL', 'redis-cli ping']
  #       interval: 10s
  #       timeout: 5s

  api:
    image: chatsift/chatsift:api
    volumes:
      - ./user-assets:/usr/chatsift/user-assets
    build:
      context: ./
      dockerfile: ./Dockerfile
    restart: unless-stopped
    env_file:
      - ./.env.public
      - ./.env.private
    command: ['node', '--enable-source-maps', './services/api/dist/bin.js']
    ports:
      - 127.0.0.1:${API_PORT}:${API_PORT}

volumes:
  postgres-data:
    name: 'chatsift-v3-postgres-data'

networks:
  default:
    name: chatsift

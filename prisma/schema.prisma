generator kysely {
  provider = "prisma-kysely"
  output   = "../packages/private/core/src/types"
  fileName = "entities.ts"
}

datasource db {
  provider = "postgresql"
  url      = env("PRISMA_DATABASE_URL")
}

// SECTION general

model Experiment {
  name       String               @id
  createdAt  DateTime             @default(now())
  updatedAt  DateTime?
  rangeStart Int
  rangeEnd   Int
  overrides  ExperimentOverride[]
}

model ExperimentOverride {
  id             Int        @id @default(autoincrement())
  guildId        String
  experimentName String
  experiment     Experiment @relation(fields: [experimentName], references: [name], onDelete: Cascade)

  @@unique([guildId, experimentName])
}

model DashboardGrant {
  id          Int    @id @default(autoincrement())
  guildId     String
  userId      String
  createdById String

  @@unique([guildId, userId])
}

// SECTION ama bot

model AMASession {
  id               Int      @id @default(autoincrement())
  guildId          String
  modQueueId       String?
  flaggedQueueId   String?
  guestQueueId     String?
  title            String
  answersChannelId String
  promptChannelId  String
  ended            Boolean  @default(false)
  createdAt        DateTime @default(now())

  questions  AMAQuestion[]
  promptData AMAPromptData?
}

model AMAPromptData {
  id              Int        @id @default(autoincrement())
  amaId           Int        @unique
  ama             AMASession @relation(fields: [amaId], references: [id], onDelete: Cascade)
  promptMessageId String     @unique
  promptJSONData  String
}

model AMAQuestion {
  id       Int        @id @default(autoincrement())
  amaId    Int
  ama      AMASession @relation(fields: [amaId], references: [id], onDelete: Cascade)
  authorId String
}
